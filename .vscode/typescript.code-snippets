{
  "Exported class": {
    "prefix": ["cls"],
    "body": ["export class ${1:name} {", "${0}", "}"],
    "description": "Export a class"
  },
  "Arrow function with type": {
    "prefix": ["fun"],
    "body": ["const ${1:name} = (${2}): ${3:void} => {", "${0}", "};"],
    "description": "An arrow function with return-type definition and args"
  },
  "Async arrow function with type": {
    "prefix": ["afun"],
    "body": ["const ${1:name} = async (${2}): Promise<${3:void}> => {", "${0}", "};"],
    "description": "An async arrow function with Promise return-type definition and args"
  },
  "Jest describe with test": {
    "prefix": "describe",
    "body": ["describe(\"${1:name}\", () => {", "it(\"${2:name}\", async () => {", "${0}", "});", "});"],
    "description": "Jest describe block with inner async test case"
  },
  "Jest test case": {
    "prefix": ["it", "test"],
    "body": ["it(\"${1:name}\", async () => {", "${0}", "});"],
    "description": "Jest async test case"
  },
  "Jest before each": {
    "prefix": ["before"],
    "body": ["beforeEach(async () => {", "${0}", "});"],
    "description": "Jest before each hook"
  },
  "Jest after each": {
    "prefix": ["after"],
    "body": ["afterEach(async () => {", "${0}", "});"],
    "description": "Jest after each hook"
  }
}
